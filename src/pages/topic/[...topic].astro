---
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { PostItem } from "../../components/PostItem";
import { GrillContainer } from "../../components/GrillContainer";
import { Container } from "../../components/Container";
export async function getStaticPaths() {
  const posts = await getCollection("blog");
  const initial: { [topic: string]: number } = {};
  return Object.entries(
    posts.reduce((object, post) => {
      const topics = post.data.topics ?? [];
      topics.forEach((topic) => {
        object[topic] += 1;
      });
      return object;
    }, initial)
  ).map(([topic, count]) => ({
    params: { topic },
    props: { topic, count },
  }));
}

const { topic, count } = Astro.props;

async function getPostsByTopic(topic: string) {
  return (await getCollection("blog"))
    .filter((post) => post.data.hidden !== true)
    .filter((post) => (post.data.topics ?? []).includes(topic));
}

const posts = await getPostsByTopic(topic);
---

<Layout title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <main class="flex flex-col items-stretch justify-start">
    <GrillContainer parentClassOverride="relative h-fit">
      <h4
        class="px-2 uppercase bg-gray-800 text-white
          dark:bg-white dark:text-gray-800"
      >
        Topic
      </h4>
      <h2
        class="px-2 bg-gray-800 text-white
          dark:bg-white dark:text-gray-800"
      >
        {topic}
      </h2>
    </GrillContainer>
    <Container>
      {
        posts.map((post) => (
          <>
            <PostItem post={post} client:only />
          </>
        ))
      }
    </Container>
  </main>
</Layout>
