---
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { PostItem } from "../../components/PostItem";
export async function getStaticPaths() {
  const posts = await getCollection("blog");
  const initial: { [topic: string]: number } = {};
  return Object.entries(
    posts.reduce((object, post) => {
      const topics = post.data.topics ?? [];
      topics.forEach((topic) => {
        object[topic] += 1;
      });
      return object;
    }, initial)
  ).map(([topic, count]) => ({
    params: { topic },
    props: { topic, count },
  }));
}

const { topic, count } = Astro.props;

async function getPostsByTopic(topic: string) {
  return (await getCollection("blog")).filter((post) =>
    (post.data.topics ?? []).includes(topic)
  );
}

const posts = await getPostsByTopic(topic);
---

<Layout title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <main class="flex flex-col items-stretch justify-start">
    <section class="relative h-fit">
      <div
        class="grill-background before:bg-slate-700 dark:before:bg-slate-400 before:bg-opacity-30 before:rotate-1 w-full h-full"
      >
        <div
          class="py-8 lg:mx-auto h-full w-full max-w-[96rem] flex flex-col items-start justify-start gap-2"
        >
          <h4 class="uppercase">Topic</h4>
          <h2>{topic}</h2>
        </div>
      </div>
    </section>
    <section class="my-8 flex flex-col gap-4 lg:mx-auto w-full max-w-5xl">
      {
        posts.map((post) => (
          <>
            <PostItem post={post} client:only />
          </>
        ))
      }
    </section>
  </main>
</Layout>
