---
import { getCollection, type CollectionEntry } from "astro:content";
import { SITE_TITLE, SITE_DESCRIPTION, CATEGORIES } from "../../consts";
import Layout from "../../layouts/Layout.astro";
import { PostItem } from "../../components/PostItem";
import { GrillContainer } from "../../components/GrillContainer";
import { Container } from "../../components/Container";
import type { JSX } from "solid-js";

export async function getStaticPaths() {
  return Object.values(CATEGORIES).map((category) => ({
    params: { id: category.id },
    props: category,
  }));
}

const category = Astro.props;

const posts = (await getCollection("blog"))
  .filter((post) => post.data.hidden !== true)
  .filter(
    (post) =>
      (CATEGORIES[post.data.category ?? "uncategorized"]?.id ??
        "uncategorized") === category.id
  );
---

<Layout title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <main class="flex flex-col items-stretch justify-start">
    <GrillContainer parentClassOverride="relative h-fit">
      <h2
        class={`px-2 uppercase bg-category-${category.id}-bg text-category-${category.id}-text dark:bg-category-${category.id}-bg-dark dark:text-category-${category.id}-text-dark`}
      >
        {category.name}
      </h2>
      <p
        class={`px-2 bg-category-${category.id}-bg text-category-${category.id}-text dark:bg-category-${category.id}-bg-dark dark:text-category-${category.id}-text-dark`}
      >
        {category.description}
      </p>
    </GrillContainer>
    <Container>
      {
        posts.map((post): JSX.Element => (
          <>
            <PostItem post={post} client:only="solid-js" />
          </>
        ))
      }
      {
        posts.length === 0 && (
          <p class="mx-auto my-8">읽을 수 있는 글이 없습니다.</p>
        )
      }
    </Container>
  </main>
</Layout>
