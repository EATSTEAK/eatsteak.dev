---
import { getCollection } from "astro:content";
import { Topics } from "../../components/Topics";
import { SITE_TITLE, SITE_DESCRIPTION, CATEGORIES } from "../../consts";
import Layout from "../../layouts/Layout.astro";
import { GrillContainer } from "../../components/GrillContainer";
import { Container } from "../../components/Container";

async function getTopics() {
  const posts = await getCollection("blog");
  const initial: { [topic: string]: number } = {};
  return posts
    .filter((post) => post.data.hidden !== true)
    .reduce((object, post) => {
      const topics = post.data.topics ?? [];
      topics.forEach((topic) => {
        object[topic] += 1;
      });
      return object;
    }, initial);
}

const categories = Object.values(CATEGORIES);

const topics = Object.keys(await getTopics());
---

<Layout title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <main class="flex flex-col items-stretch justify-start">
    <GrillContainer parentClassOverride="relative h-fit">
      <h2
        class="px-2 uppercase bg-gray-800 text-white
    dark:bg-white dark:text-gray-800"
      >
        Categories
      </h2>
      <div class="flex flex-wrap gap-x-4 w-full">
        {
          categories.map((category) => (
            <a
              href={`/category/${category.id}`}
              class={`border-2 p-4 border-slate-700 dark:border-white bg-category-${category.id}-bg text-category-${category.id}-text dark:bg-category-${category.id}-bg-dark dark:text-category-${category.id}-text-dark basis-full lg:basis-[calc(50%-0.5rem)]`}
            >
              <h2 class="uppercase">{category.name}</h2>
              <p>{category.description}</p>
            </a>
          ))
        }
      </div>
    </GrillContainer>
    <Container varient="wide">
      <h2 class="uppercase">Topics</h2>
      <div><Topics topics={topics} /></div>
    </Container>
  </main>
</Layout>
