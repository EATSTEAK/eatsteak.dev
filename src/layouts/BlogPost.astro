---
import type { CollectionEntry } from "astro:content";
import Layout from "./Layout.astro";
import { Profile } from "../components/Profile";
import { FormattedDate } from "../components/FormattedDate";
import { Topics } from "../components/Topics";

type Props = CollectionEntry<"blog">["data"];

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  category,
  topics,
} = Astro.props;
---

<Layout title={title} description={description}>
  <main
    class="self-center flex flex-wrap justify-between w-full max-w-[96rem] xl:flex-nowrap px-6 lg:px-0 xl:gap-12"
  >
    <div
      class="grow flex flex-wrap justify-center w-full basis-full xl:basis-auto lg:w-auto"
    >
      <article class="w-full max-w-4xl">
        <div class="mb-2 image min-h-[16rem]">
          {heroImage && <img class="max-w-100%" src={heroImage} alt="" />}
        </div>
        <div class="prose">
          <div class="title mb-8">
            <legend class="uppercase font-bold tracking-widest mb-2"
              >{category ?? "Uncategorized"}</legend
            >
            <h1>{title}</h1>
            {topics && <Topics topics={topics} />}
            <div class="date text-gray-500">
              <FormattedDate dateTime={pubDate} client:only />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    |
                    <FormattedDate dateTime={updatedDate} client:only /> 수정
                  </div>
                )
              }
            </div>
            <hr />
          </div>
          <slot />
        </div>
      </article>
    </div>
    <aside
      class="grow px-12 py-8 xl:p-0 max-w-[96rem] xl:max-w-sm mx-auto xl:mx-0"
    >
      <hr class="block xl:hidden" />
      <Profile />
      <hr class="hidden xl:block" />
    </aside>
  </main>
</Layout>
